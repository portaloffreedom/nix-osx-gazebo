diff -r 039509b626b4 gazebo/msgs/generator/GazeboGenerator.cc
--- a/gazebo/msgs/generator/GazeboGenerator.cc  Thu Jun 21 00:17:31 2018 +0000
+++ b/gazebo/msgs/generator/GazeboGenerator.cc  Thu Jun 21 01:43:14 2018 -0700
@@ -22,6 +22,7 @@
 #include <google/protobuf/descriptor.pb.h>
 #include <boost/algorithm/string/replace.hpp>

+#include <memory>
 #include <vector>
 #include <utility>
 #include <iostream>
@@ -48,7 +49,7 @@

   // Add boost shared point include
   {
-    scoped_ptr<io::ZeroCopyOutputStream> output(
+    std::unique_ptr<io::ZeroCopyOutputStream> output(
         _generator_context->OpenForInsert(headerFilename, "includes"));
     io::Printer printer(output.get(), '$');

@@ -57,7 +58,7 @@

   // Add boost shared point include
   {
-    scoped_ptr<io::ZeroCopyOutputStream> output(
+    std::unique_ptr<io::ZeroCopyOutputStream> output(
         _generator_context->OpenForInsert(sourceFilename, "includes"));
     io::Printer printer(output.get(), '$');

@@ -67,7 +68,7 @@


   {
-    scoped_ptr<io::ZeroCopyOutputStream> output(
+    std::unique_ptr<io::ZeroCopyOutputStream> output(
         _generator_context->OpenForInsert(headerFilename, "includes"));
     io::Printer printer(output.get(), '$');

@@ -79,7 +80,7 @@

   // Add boost shared typedef
   {
-    scoped_ptr<io::ZeroCopyOutputStream> output(
+    std::unique_ptr<io::ZeroCopyOutputStream> output(
         _generator_context->OpenForInsert(headerFilename, "namespace_scope"));
     io::Printer printer(output.get(), '$');

@@ -95,7 +96,7 @@

   // Add const boost shared typedef
   {
-    scoped_ptr<io::ZeroCopyOutputStream> output(
+    std::unique_ptr<io::ZeroCopyOutputStream> output(
         _generator_context->OpenForInsert(headerFilename, "global_scope"));
     io::Printer printer(output.get(), '$');

@@ -111,7 +112,7 @@

   // Add Message Factory register
   {
-    scoped_ptr<io::ZeroCopyOutputStream> output(
+    std::unique_ptr<io::ZeroCopyOutputStream> output(
         _generator_context->OpenForInsert(sourceFilename, "global_scope"));
     io::Printer printer(output.get(), '$');